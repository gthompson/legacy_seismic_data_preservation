.so ../man_macros/suds_man_macros
.TH ST_ABORT_TRANS 2  "3 March 1994" "suds \*v" "SUDS SUBROUTINE"
.SH NAME
st_abort_trans \- cancel a pending transaction
.SH C_SYNOPSIS
.ft B
#include <suds/suds.h>
.LP
.ft B
INT4 st_abort_trans(SUDS_STREAM *output_stream);
.ft R
.SH FORTRAN_SYNOPSIS
.LP
.ft B
integer*4 st_abort_trans
.br
function st_abort_trans(output_stream)
.br
	integer*4 output_stream
.ft R
.SH DESCRIPTION
Any set of SUDS structures and accompanying data can be grouped into a
\fItransaction\fR for entry into a database.  The database management
system (DBMS) guarantees that either all members of a transaction are
stored, or none of them are stored.  By this means, transactions can used
to assure that data within a database remains logically consistent.
.PP
The \fBst_abort_trans\fR call is ignored, and SUCCESSFUL is returned,
if \fIoutput_stream\fR is a file.  If \fIoutput_stream\fR is a database
the \fBst_abort_trans\fR call tells the DBMS to abort an incomplete
transaction in database \fIoutput_stream\fR.  This call would normally
be used when an error occurs in the user's program and would cause all
\fBst_puts\fR to \fIoutput_stream\fR since the beginning of the
transaction to be deleted from or simply not added to
\fIoutput_stream\fR.
.SH "SEE ALSO"
st_begin_trans(2), st_put(2), st_end_trans(2)
.SH DIAGNOSTICS
Returns SUCCESSFUL or FAILED.  Errors are reported by st_error(2).  A
typical error is to issue an \fBst_abort_trans\fR call to a stream
where no transaction is pending.
.SH AUTHOR
Mark Anderson, Geophysical Institute, University of Alaska, 
Fairbanks, AK 99701 and Peter L. Ward, U.S. Geological Survey, Menlo Park, CA 94025
